@using Microsoft.AspNetCore.Identity
@using Web.Areas.Identity.Data

@inject SignInManager<WebUser> SignInManager
@inject UserManager<WebUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <div class="dropdown">
                <a class="username dropdown-toggle" role="button" data-bs-toggle="dropdown" aria-expanded="false">

                    @{
                        var user = await UserManager.GetUserAsync(User);
                        @if (user != null)
                        {
                            var imagePath = user.AvataraPath ?? "images/user.png";
                            <img src="~/@imagePath" class="avatar me-3" />
                            string name = @user.FirstName + " " + @user.LastName;
                            <span>@name</span>
                        }
                    }
                </a>

                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index">Profile</a></li>
                    <li class="dropdown-item">
                        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Game", new { area = "" })">
                            <button id="logout" class="dropdown-item text-start" type="submit">Logout</button>
                        </form>
                    </li>
                </ul>
            </div>
    </li>
}
else
{
    <li class="nav-item">
            <a class="reg btn btn-outline-success" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
            <a class="reg btn btn-outline-success" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
